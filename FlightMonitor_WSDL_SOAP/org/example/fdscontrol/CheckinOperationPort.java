
package org.example.fdscontrol;

import java.math.BigInteger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CheckinOperationPort", targetNamespace = "http://www.example.org/FDSControl/")
@XmlSeeAlso({
    org.example.fdscontrol.ObjectFactory.class,
    org.example.fdsinfo_schema.ObjectFactory.class
})
public interface CheckinOperationPort {


    /**
     * 
     * @param date
     * @param seat
     * @param delay
     * @param passenger
     * @param aircraft
     * @param name
     * @param gate
     * @param flightNumber
     * @throws PassengerAlreadyCheckinFault
     * @throws InstanceNotFoundMessage
     * @throws ServiceUnavaibleMessage
     */
    @WebMethod(operationName = "CheckInOperation", action = "http://www.example.org/FDSControl/CheckInOperation")
    @RequestWrapper(localName = "CheckInOperation", targetNamespace = "http://www.example.org/FDSControl/", className = "org.example.fdscontrol.CheckInOperationRequestType")
    @ResponseWrapper(localName = "CheckInOperationResponse", targetNamespace = "http://www.example.org/FDSControl/", className = "org.example.fdscontrol.CheckinOperationResponseType")
    public void checkInOperation(
        @WebParam(name = "flightNumber", targetNamespace = "")
        String flightNumber,
        @WebParam(name = "Aircraft", targetNamespace = "")
        String aircraft,
        @WebParam(name = "date", targetNamespace = "")
        XMLGregorianCalendar date,
        @WebParam(name = "passenger", targetNamespace = "")
        String passenger,
        @WebParam(name = "name", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> name,
        @WebParam(name = "seat", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> seat,
        @WebParam(name = "gate", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> gate,
        @WebParam(name = "delay", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<BigInteger> delay)
        throws InstanceNotFoundMessage, PassengerAlreadyCheckinFault, ServiceUnavaibleMessage
    ;

}
